// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetrivalManagement.Models;

#nullable disable

namespace RetrivalManagement.Models.Migrations
{
    [DbContext(typeof(RetrivalManagementDbContext))]
    partial class RetrivalManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.ClientModule.ClientRequest", b =>
                {
                    b.Property<int>("ClientRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientRequestId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("ClientRequestId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ClientRequests", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ApplicationModule", b =>
                {
                    b.Property<int>("ApplicationModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationModuleId"));

                    b.Property<int>("ModuleMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentApplicationModuleId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationModuleId");

                    b.HasIndex("ModuleMasterId");

                    b.ToTable("ApplicationModules", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ApplicationUserToken", b =>
                {
                    b.Property<int>("ApplicationUserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationUserTokenId"));

                    b.Property<string>("AudienceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("JwtToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicationUserTokens", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.ToTable("Clients", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.DescriptionDetail", b =>
                {
                    b.Property<int>("DescriptionDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescriptionDetailId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("DescriptionDetailId");

                    b.ToTable("DescriptionDetails", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ModuleMaster", b =>
                {
                    b.Property<int>("ModuleMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleMasterId"));

                    b.Property<string>("ModuleMasterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ModuleMasterId");

                    b.ToTable("ModuleMasters", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("Roles", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.RolePermission", b =>
                {
                    b.Property<int>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolePermissionId"));

                    b.Property<int>("ApplicationModuleId")
                        .HasColumnType("int");

                    b.Property<bool?>("CanAdd")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanView")
                        .HasColumnType("bit");

                    b.Property<int>("PermissionPriority")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("ApplicationModuleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("ApplicationLocaleId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationTimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("LoginBlocked")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(132)
                        .HasColumnType("varbinary(132)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("varbinary(140)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles", "dbo");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.ClientModule.ClientRequest", b =>
                {
                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Client");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ApplicationModule", b =>
                {
                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.ModuleMaster", "ModuleMaster")
                        .WithMany("ApplicationModules")
                        .HasForeignKey("ModuleMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleMaster");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ApplicationUserToken", b =>
                {
                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.User", "User")
                        .WithMany("ApplicationUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.RolePermission", b =>
                {
                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.ApplicationModule", "ApplicationModule")
                        .WithMany("RolePermissions")
                        .HasForeignKey("ApplicationModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationModule");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.UserRole", b =>
                {
                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetrivalManagement.Models.DbEntities.Main.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ApplicationModule", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.ModuleMaster", b =>
                {
                    b.Navigation("ApplicationModules");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("RetrivalManagement.Models.DbEntities.Main.User", b =>
                {
                    b.Navigation("ApplicationUserTokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
